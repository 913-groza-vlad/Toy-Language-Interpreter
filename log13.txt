 -> Program State ID: 1
--------------------
	- EXE STACK -
(Ref(int) v2;(int x;(int q;(new(v1, 20);(new(v2, 30);(newLock(x);( Fork(( Fork((lock(x);(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))));(lock(x);(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x)))));(newLock(q);( Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))));(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q)))))))))))))))))))
Ref(int) v1
--------------------
	- SYM TABLE -
--------------------
	- HEAP TABLE -
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(Ref(int) v2;(int x;(int q;(new(v1, 20);(new(v2, 30);(newLock(x);( Fork(( Fork((lock(x);(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))));(lock(x);(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x)))));(newLock(q);( Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))));(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q)))))))))))))))))))
--------------------
	- SYM TABLE -
	   v1 -> 0 -> int
--------------------
	- HEAP TABLE -
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(int x;(int q;(new(v1, 20);(new(v2, 30);(newLock(x);( Fork(( Fork((lock(x);(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))));(lock(x);(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x)))));(newLock(q);( Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))));(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q))))))))))))))))))
Ref(int) v2
--------------------
	- SYM TABLE -
	   v1 -> 0 -> int
--------------------
	- HEAP TABLE -
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(int x;(int q;(new(v1, 20);(new(v2, 30);(newLock(x);( Fork(( Fork((lock(x);(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))));(lock(x);(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x)))));(newLock(q);( Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))));(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q))))))))))))))))))
--------------------
	- SYM TABLE -
	   v1 -> 0 -> int
	   v2 -> 0 -> int
--------------------
	- HEAP TABLE -
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(int q;(new(v1, 20);(new(v2, 30);(newLock(x);( Fork(( Fork((lock(x);(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))));(lock(x);(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x)))));(newLock(q);( Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))));(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q)))))))))))))))))
int x
--------------------
	- SYM TABLE -
	   v1 -> 0 -> int
	   v2 -> 0 -> int
--------------------
	- HEAP TABLE -
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(int q;(new(v1, 20);(new(v2, 30);(newLock(x);( Fork(( Fork((lock(x);(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))));(lock(x);(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x)))));(newLock(q);( Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))));(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q)))))))))))))))))
--------------------
	- SYM TABLE -
	   x -> 0
	   v1 -> 0 -> int
	   v2 -> 0 -> int
--------------------
	- HEAP TABLE -
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(new(v1, 20);(new(v2, 30);(newLock(x);( Fork(( Fork((lock(x);(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))));(lock(x);(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x)))));(newLock(q);( Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))));(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q))))))))))))))))
int q
--------------------
	- SYM TABLE -
	   x -> 0
	   v1 -> 0 -> int
	   v2 -> 0 -> int
--------------------
	- HEAP TABLE -
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(new(v1, 20);(new(v2, 30);(newLock(x);( Fork(( Fork((lock(x);(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))));(lock(x);(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x)))));(newLock(q);( Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))));(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q))))))))))))))))
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 0
	   v1 -> 0 -> int
	   v2 -> 0 -> int
--------------------
	- HEAP TABLE -
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(new(v2, 30);(newLock(x);( Fork(( Fork((lock(x);(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))));(lock(x);(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x)))));(newLock(q);( Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))));(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q)))))))))))))))
new(v1, 20)
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 0
	   v1 -> 0 -> int
	   v2 -> 0 -> int
--------------------
	- HEAP TABLE -
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(new(v2, 30);(newLock(x);( Fork(( Fork((lock(x);(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))));(lock(x);(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x)))));(newLock(q);( Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))));(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q)))))))))))))))
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 0
	   v1 -> 1 -> int
	   v2 -> 0 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(newLock(x);( Fork(( Fork((lock(x);(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))));(lock(x);(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x)))));(newLock(q);( Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))));(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q))))))))))))))
new(v2, 30)
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 0
	   v1 -> 1 -> int
	   v2 -> 0 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(newLock(x);( Fork(( Fork((lock(x);(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))));(lock(x);(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x)))));(newLock(q);( Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))));(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q))))))))))))))
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 0
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
( Fork(( Fork((lock(x);(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))));(lock(x);(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x)))));(newLock(q);( Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))));(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q)))))))))))))
newLock(x)
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 0
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
( Fork(( Fork((lock(x);(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))));(lock(x);(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x)))));(newLock(q);( Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))));(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q)))))))))))))
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(newLock(q);( Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))));(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q))))))))))))
 Fork(( Fork((lock(x);(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))));(lock(x);(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x)))))
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(newLock(q);( Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))));(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q))))))))))))
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
--------------------

 -> Program State ID: 5
--------------------
	- EXE STACK -
( Fork((lock(x);(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))));(lock(x);(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x))))
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
( Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))));(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q)))))))))))
newLock(q)
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
--------------------

 -> Program State ID: 5
--------------------
	- EXE STACK -
(lock(x);(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x)))
 Fork((lock(x);(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))))
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
( Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))));(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q)))))))))))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 5
--------------------
	- EXE STACK -
(lock(x);(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x)))
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 6
--------------------
	- EXE STACK -
(lock(x);(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x)))
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q))))))))))
 Fork(( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 5
--------------------
	- EXE STACK -
(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x))
lock(x)
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 6
--------------------
	- EXE STACK -
(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))
lock(x)
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(NopStatement;(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q))))))))))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 5
--------------------
	- EXE STACK -
(WriteHeap(v1 -> ReadHeap(v1) * 10);unlock(x))
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 6
--------------------
	- EXE STACK -
(WriteHeap(v1 -> ReadHeap(v1) - 1);unlock(x))
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 7
--------------------
	- EXE STACK -
( Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))));(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q))))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q)))))))))
NopStatement
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 5
--------------------
	- EXE STACK -
unlock(x)
WriteHeap(v1 -> ReadHeap(v1) * 10)
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 6
--------------------
	- EXE STACK -
unlock(x)
WriteHeap(v1 -> ReadHeap(v1) - 1)
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 7
--------------------
	- EXE STACK -
(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))
 Fork((lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 20
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(NopStatement;(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q)))))))))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 5
--------------------
	- EXE STACK -
unlock(x)
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 6
--------------------
	- EXE STACK -
unlock(x)
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 7
--------------------
	- EXE STACK -
(lock(q);(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q)))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 8
--------------------
	- EXE STACK -
(lock(q);(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q)))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q))))))))
NopStatement
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 5
--------------------
	- EXE STACK -
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 6
--------------------
	- EXE STACK -
--------------------
	- SYM TABLE -
	   q -> 0
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 7
--------------------
	- EXE STACK -
(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q))
lock(q)
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 8
--------------------
	- EXE STACK -
(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))
lock(q)
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(NopStatement;(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q))))))))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 7
--------------------
	- EXE STACK -
(WriteHeap(v2 -> ReadHeap(v2) * 10);unlock(q))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 8
--------------------
	- EXE STACK -
(WriteHeap(v2 -> ReadHeap(v2) + 5);unlock(q))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q)))))))
NopStatement
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 7
--------------------
	- EXE STACK -
unlock(q)
WriteHeap(v2 -> ReadHeap(v2) * 10)
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 8
--------------------
	- EXE STACK -
unlock(q)
WriteHeap(v2 -> ReadHeap(v2) + 5)
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 30
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(NopStatement;(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q)))))))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 350
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 7
--------------------
	- EXE STACK -
unlock(q)
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 350
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 8
--------------------
	- EXE STACK -
unlock(q)
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 350
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q))))))
NopStatement
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 350
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 7
--------------------
	- EXE STACK -
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 350
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 8
--------------------
	- EXE STACK -
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 350
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(lock(x);(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q))))))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 350
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q)))))
lock(x)
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 350
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(print (ReadHeap(v1));(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q)))))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 350
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q))))
print (ReadHeap(v1))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 350
--------------------
	  - OUT -
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(unlock(x);(lock(q);(print (ReadHeap(v2));unlock(q))))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 350
--------------------
	  - OUT -
		190
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(lock(q);(print (ReadHeap(v2));unlock(q)))
unlock(x)
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 350
--------------------
	  - OUT -
		190
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(lock(q);(print (ReadHeap(v2));unlock(q)))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 350
--------------------
	  - OUT -
		190
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(print (ReadHeap(v2));unlock(q))
lock(q)
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 350
--------------------
	  - OUT -
		190
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
(print (ReadHeap(v2));unlock(q))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 350
--------------------
	  - OUT -
		190
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
unlock(q)
print (ReadHeap(v2))
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 350
--------------------
	  - OUT -
		190
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
unlock(q)
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 350
--------------------
	  - OUT -
		190
		350
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

 -> Program State ID: 1
--------------------
	- EXE STACK -
--------------------
	- SYM TABLE -
	   q -> 2
	   x -> 1
	   v1 -> 1 -> int
	   v2 -> 2 -> int
--------------------
	- HEAP TABLE -
	   1 -> 190
	   2 -> 350
--------------------
	  - OUT -
		190
		350
--------------------
    - FILE TABLE -
--------------------
    - LOCK TABLE -
	   1 -> -1
	   2 -> -1
--------------------

